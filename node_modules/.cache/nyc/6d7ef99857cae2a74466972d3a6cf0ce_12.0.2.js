var cov_tqqm6wyj=function(){var path="/Users/tormodflesjo/tormodWork/ironbot/src/bots/SwarmKingPlayer.js",hash="5d20050ed35183725fc2f77044d80737c3ac7760",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/tormodflesjo/tormodWork/ironbot/src/bots/SwarmKingPlayer.js",statementMap:{"0":{start:{line:1,column:19},end:{line:1,column:49}},"1":{start:{line:8,column:18},end:{line:8,column:34}},"2":{start:{line:9,column:4},end:{line:9,column:28}},"3":{start:{line:10,column:21},end:{line:10,column:39}},"4":{start:{line:11,column:20},end:{line:11,column:51}},"5":{start:{line:13,column:4},end:{line:15,column:5}},"6":{start:{line:14,column:6},end:{line:14,column:43}},"7":{start:{line:17,column:4},end:{line:17,column:60}},"8":{start:{line:19,column:4},end:{line:32,column:5}},"9":{start:{line:20,column:21},end:{line:20,column:33}},"10":{start:{line:23,column:6},end:{line:28,column:9}},"11":{start:{line:24,column:8},end:{line:24,column:22}},"12":{start:{line:25,column:29},end:{line:25,column:58}},"13":{start:{line:26,column:8},end:{line:26,column:68}},"14":{start:{line:27,column:8},end:{line:27,column:21}},"15":{start:{line:31,column:6},end:{line:31,column:58}},"16":{start:{line:36,column:4},end:{line:36,column:71}},"17":{start:{line:40,column:21},end:{line:42,column:5}},"18":{start:{line:41,column:14},end:{line:41,column:61}},"19":{start:{line:43,column:4},end:{line:43,column:57}},"20":{start:{line:50,column:19},end:{line:50,column:50}},"21":{start:{line:51,column:22},end:{line:56,column:7}},"22":{start:{line:55,column:10},end:{line:55,column:73}},"23":{start:{line:57,column:4},end:{line:57,column:48}},"24":{start:{line:57,column:38},end:{line:57,column:43}},"25":{start:{line:61,column:4},end:{line:61,column:29}},"26":{start:{line:65,column:0},end:{line:65,column:33}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:7,column:2},end:{line:7,column:3}},loc:{start:{line:7,column:21},end:{line:33,column:3}},line:7},"1":{name:"(anonymous_1)",decl:{start:{line:23,column:25},end:{line:23,column:26}},loc:{start:{line:23,column:30},end:{line:28,column:7}},line:23},"2":{name:"(anonymous_2)",decl:{start:{line:35,column:2},end:{line:35,column:3}},loc:{start:{line:35,column:18},end:{line:37,column:3}},line:35},"3":{name:"(anonymous_3)",decl:{start:{line:39,column:2},end:{line:39,column:3}},loc:{start:{line:39,column:51},end:{line:44,column:3}},line:39},"4":{name:"(anonymous_4)",decl:{start:{line:41,column:6},end:{line:41,column:7}},loc:{start:{line:41,column:14},end:{line:41,column:61}},line:41},"5":{name:"(anonymous_5)",decl:{start:{line:49,column:2},end:{line:49,column:3}},loc:{start:{line:49,column:46},end:{line:58,column:3}},line:49},"6":{name:"(anonymous_6)",decl:{start:{line:54,column:8},end:{line:54,column:9}},loc:{start:{line:55,column:10},end:{line:55,column:73}},line:55},"7":{name:"(anonymous_7)",decl:{start:{line:57,column:28},end:{line:57,column:29}},loc:{start:{line:57,column:38},end:{line:57,column:43}},line:57},"8":{name:"(anonymous_8)",decl:{start:{line:60,column:2},end:{line:60,column:3}},loc:{start:{line:60,column:17},end:{line:62,column:3}},line:60}},branchMap:{"0":{loc:{start:{line:13,column:4},end:{line:15,column:5}},type:"if",locations:[{start:{line:13,column:4},end:{line:15,column:5}},{start:{line:13,column:4},end:{line:15,column:5}}],line:13},"1":{loc:{start:{line:19,column:4},end:{line:32,column:5}},type:"if",locations:[{start:{line:19,column:4},end:{line:32,column:5}},{start:{line:19,column:4},end:{line:32,column:5}}],line:19},"2":{loc:{start:{line:36,column:11},end:{line:36,column:70}},type:"cond-expr",locations:[{start:{line:36,column:65},end:{line:36,column:66}},{start:{line:36,column:69},end:{line:36,column:70}}],line:36},"3":{loc:{start:{line:43,column:11},end:{line:43,column:56}},type:"cond-expr",locations:[{start:{line:43,column:35},end:{line:43,column:45}},{start:{line:43,column:48},end:{line:43,column:56}}],line:43}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0]},_coverageSchema:"d34fc3e6b8297bcde183f5492bcb8fcb36775295"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const ChessUtils=(cov_tqqm6wyj.s[0]++,require("../utils/ChessUtils"));/**
 * Move pieces closer to own king - mate and check if possible.
 */class SwarmKingPlayer{getNextMove(moves){cov_tqqm6wyj.f[0]++;const chess=(cov_tqqm6wyj.s[1]++,new ChessUtils());cov_tqqm6wyj.s[2]++;chess.applyMoves(moves);var legalMoves=(cov_tqqm6wyj.s[3]++,chess.legalMoves());const forcing=(cov_tqqm6wyj.s[4]++,chess.filterForcing(legalMoves));cov_tqqm6wyj.s[5]++;if(forcing.length){cov_tqqm6wyj.b[0][0]++;cov_tqqm6wyj.s[6]++;return chess.pickRandomMove(forcing);}else{cov_tqqm6wyj.b[0][1]++;}cov_tqqm6wyj.s[7]++;legalMoves=this.removeReverseMoves(moves,legalMoves);cov_tqqm6wyj.s[8]++;if(legalMoves.length){cov_tqqm6wyj.b[1][0]++;const colour=(cov_tqqm6wyj.s[9]++,chess.turn());// get distance to king in all successor states
cov_tqqm6wyj.s[10]++;legalMoves.forEach(m=>{cov_tqqm6wyj.f[1]++;cov_tqqm6wyj.s[11]++;chess.move(m);const squareOfKing=(cov_tqqm6wyj.s[12]++,chess.squareOfOpponentsKing());cov_tqqm6wyj.s[13]++;m.metric=this.distanceMetric(chess,squareOfKing,colour);cov_tqqm6wyj.s[14]++;chess.undo();});// choose move that maximises metric
cov_tqqm6wyj.s[15]++;return chess.uci(legalMoves.reduce(this.randomMax));}else{cov_tqqm6wyj.b[1][1]++;}}randomMax(a,b){cov_tqqm6wyj.f[2]++;cov_tqqm6wyj.s[16]++;return a.metric+Math.random()>b.metric+Math.random()?(cov_tqqm6wyj.b[2][0]++,a):(cov_tqqm6wyj.b[2][1]++,b);}removeReverseMoves(previousUciMoves,legalMoves){cov_tqqm6wyj.f[3]++;const filtered=(cov_tqqm6wyj.s[17]++,legalMoves.filter(move=>{cov_tqqm6wyj.f[4]++;cov_tqqm6wyj.s[18]++;return!previousUciMoves.includes(move.to+move.from);}));cov_tqqm6wyj.s[19]++;return filtered.length===0?(cov_tqqm6wyj.b[3][0]++,legalMoves):(cov_tqqm6wyj.b[3][1]++,filtered);}/**
   * Sum of (16 - manhattan distance to king) for each piece of given colour.
   */distanceMetric(chess,targetSquare,colour){cov_tqqm6wyj.f[5]++;const target=(cov_tqqm6wyj.s[20]++,chess.coordinates(targetSquare));const distances=(cov_tqqm6wyj.s[21]++,chess.squaresOf(colour).map(square=>{cov_tqqm6wyj.f[6]++;cov_tqqm6wyj.s[22]++;return 16-chess.manhattanDistance(target,chess.coordinates(square));}));cov_tqqm6wyj.s[23]++;return distances.reduce((a,b)=>{cov_tqqm6wyj.f[7]++;cov_tqqm6wyj.s[24]++;return a+b;},0);}getReply(chat){cov_tqqm6wyj.f[8]++;cov_tqqm6wyj.s[25]++;return"swarm the king!";}}cov_tqqm6wyj.s[26]++;module.exports=SwarmKingPlayer;